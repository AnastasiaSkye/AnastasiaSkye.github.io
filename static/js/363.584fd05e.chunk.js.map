{"version":3,"file":"static/js/363.584fd05e.chunk.js","mappings":"uMAEO,MAAMA,EAAW,CACvB,iBAAMC,CAAYC,SACNC,EAAAA,GAAYF,YAAYC,EACpC,EAEA,oBAAME,CAAeF,SACTC,EAAAA,GAAYC,eAAeF,EACvC,EAEAG,cAAmBC,eACLH,EAAAA,GAAYG,iBCCdC,EAAiBA,KAC7B,MAAM,WAAEC,IAAeC,EAAAA,EAAAA,OACjB,YAAEC,EAAW,eAAEC,IAAmBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC5CC,EAAsBC,IAA2BC,EAAAA,EAAAA,WAAkB,GAEpEV,GAAgBW,EAAAA,EAAAA,cAAYZ,UACjCU,GAAwB,GACxBJ,QAAqBX,EAASM,iBAC9BS,GAAwB,EAAM,GAC5B,CAACJ,IAWJ,OATAO,EAAAA,EAAAA,YAAU,KACLV,IAAeW,EAAAA,GAAWC,SACxBd,KAELK,EAAe,IACfI,GAAwB,GACzB,GACE,CAACP,EAAYF,EAAeK,IAExB,CACND,cACAI,uBACA,E,cCtBK,MAAMO,EAAenB,IAC3B,MAAM,WAAEM,IAAeC,EAAAA,EAAAA,OACjB,YAAEC,EAAW,eAAEC,IAAmBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC5CS,EAAYC,IAAiBP,EAAAA,EAAAA,UAAkBN,EAAYc,SAAStB,IACrEuB,GAAWC,EAAAA,EAAAA,MAEXC,GAAmBV,EAAAA,EAAAA,cAAaf,IACrCS,GAAeX,GAAYA,EAAS4B,QAAOC,GAAKA,IAAM3B,KAAI,GACxD,CAACS,IAiBJ,MAAO,CACNW,aACAQ,eAjBsBzB,UAClBG,IAAeW,EAAAA,GAAWC,SACzBE,SACQtB,EAASI,eAAeF,GACnCqB,GAAc,GACdI,EAAiBzB,WAENF,EAASC,YAAYC,GAChCqB,GAAc,IAGfE,EAASM,EAAAA,UAAUC,kBACpB,EAMA,E,uBCjCK,MAAMC,GAAeC,EAAAA,EAAAA,OAAKC,IAA4B,IAA3B,WAAEC,GAAmBD,EACtD,MAAQE,KAAMC,EAAa,UAAEC,IAAcC,EAAAA,EAAAA,IAAqBJ,GAChE,OACCK,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACGJ,GAAaD,IACdG,EAAAA,EAAAA,KAACG,EAAAA,GAAS,CAACC,MAAOP,KAEjB,G,mECbE,MAAMQ,EAAU,CACtB,wBAAMC,CAAmBC,SACb7C,EAAAA,GAAY4C,mBAAmBC,EAC3C,EAEA,2BAAMC,CAAsB/C,SAChBC,EAAAA,GAAY8C,sBAAsB/C,EAC9C,EAEAG,iBAAsB6C,eACR/C,EAAAA,GAAY+C,oB,kCCApB,MAAMC,EAAaA,KACzB,MAAM,WAAE3C,IAAeC,EAAAA,EAAAA,OAChB2C,EAAeC,IAAoBrC,EAAAA,EAAAA,UAAwB,KAC3DsC,EAAkBC,IAAuBvC,EAAAA,EAAAA,WAAkB,GAE5DkC,GAAmBjC,EAAAA,EAAAA,cAAYZ,UACpCkD,GAAoB,GACpBF,QAAuBP,EAAQI,oBAC/BK,GAAoB,EAAM,GACxB,CAACF,IAWJ,OATAnC,EAAAA,EAAAA,YAAU,KACLV,IAAeW,EAAAA,GAAWC,SACxB8B,KAELG,EAAiB,IACjBE,GAAoB,GACrB,GACE,CAAC/C,EAAY0C,EAAkBG,IAE3B,CAAED,gBAAeC,mBAAkBC,mBAAkB,E,iCCjBtD,SAASE,EAAUrB,GAAgD,IAA/C,GAAEjC,EAAE,MAAE8C,EAAK,KAAEX,EAAI,iBAAEgB,GAAyBlB,EAOtE,OACCsB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaf,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAAE,UACCF,EAAAA,EAAAA,KAAA,UAAQkB,QARctD,gBAClByC,EAAQG,sBAAsB/C,GACpCmD,GAAiBP,GAAWA,EAAQlB,QAAOgC,GAAKA,EAAE1D,KAAOA,KAAI,EAMzByC,UACjCF,EAAAA,EAAAA,KAACoB,EAAAA,IAAc,CAACC,KAAM,UAGxBrB,EAAAA,EAAAA,KAAA,OAAAE,UACCF,EAAAA,EAAAA,KAACsB,EAAAA,GAAI,CAACC,GAAIjC,EAAAA,UAAUkC,YAAc,UAAYjB,EAAML,SAClDN,OAGHI,EAAAA,EAAAA,KAAA,OAAAE,UACCF,EAAAA,EAAAA,KAACsB,EAAAA,GAAI,CAACC,GAAIjC,EAAAA,UAAUkC,YAAc,UAAYjB,EAAML,SAClDK,QAKN,CC7BO,SAASkB,EAAY/B,GAA8C,IAA7C,cAAEiB,EAAa,iBAAEC,GAAyBlB,EACtE,OACCM,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAC2B,IAAzBS,EAAce,QACdV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAef,SAAA,EAC7Bc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBf,SAAA,EACvCF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,YACLF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,UACLF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,oBAELS,EAAcgB,KAAIC,IAClB5B,EAAAA,EAAAA,KAACe,EAAU,CAAetD,GAAImE,EAAKnE,GAAI8C,MAAOqB,EAAKrB,MAAOX,KAAMgC,EAAKhC,KAClEgB,iBAAkBA,GADJgB,EAAKnE,UAKxBuC,EAAAA,EAAAA,KAAA,MAAIiB,UAAU,oBAAmBf,SAAC,mBAItC,C,0GCtBO,MAAM2B,GAAcpC,EAAAA,EAAAA,OAAKC,IAAoB,IAAnB,GAAEjC,GAAWiC,EAC7C,MAAM,WAAEb,EAAU,eAAEQ,IAAmBT,EAAAA,EAAAA,IAAYnB,GAEnD,OACCuC,EAAAA,EAAAA,KAAA,UAAQiB,UAAU,QAAQC,QAAS7B,EAAgB,cAAY,QAAOa,SACpErB,GACAmB,EAAAA,EAAAA,KAAC8B,EAAAA,IAAW,CAACT,KAAM,GAAI,cAAY,eAEnCrB,EAAAA,EAAAA,KAAC+B,EAAAA,IAAY,CAACV,KAAM,GAAI,cAAY,kBAE7B,I,kCCVJ,MAAMW,GAAavC,EAAAA,EAAAA,OAAKC,IAAA,IAAC,IAAEuC,EAAG,IAAEC,EAAG,UAAEjB,GAAkBvB,EAAA,OAE5DM,EAAAA,EAAAA,KAAA,OAAKiB,UAAS,aAAAkB,OAAelB,EAAS,KAAAkB,QAAKF,GAAO,gBAAiB/B,SACjE+B,GACAjC,EAAAA,EAAAA,KAACoC,EAAAA,GAAK,CAACH,IAAKA,EAAKC,IAAKA,KAEtBlC,EAAAA,EAAAA,KAACoC,EAAAA,GAAK,CAACnB,UAAU,SAASgB,IAAI,uDAAuDC,IAAI,aAErF,ICJK/B,GAAYV,EAAAA,EAAAA,OAAKC,IAAA,IAAC,MAAEU,GAAcV,EAAA,OAE7CsB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAa,cAAY,aAAYf,SAAA,EACnDF,EAAAA,EAAAA,KAACqC,EAAAA,GAAO,CAACd,GAAIjC,EAAAA,UAAUgD,WAAa,IAAMlC,EAAM3C,GAAGyC,UAClDF,EAAAA,EAAAA,KAACgC,EAAU,CAACC,IAAK7B,EAAMmC,MAAOL,IAAK9B,EAAMoC,UAE1CxB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBf,SAAA,EAC/BF,EAAAA,EAAAA,KAACqC,EAAAA,GAAO,CAACd,GAAIjC,EAAAA,UAAUgD,WAAa,IAAMlC,EAAM3C,GAAGyC,UAClDF,EAAAA,EAAAA,KAAA,MAAAE,SAAKE,EAAMoC,UAEZxB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBf,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAAE,UACEuC,EAAAA,EAAAA,IAAkBrC,GAAOuB,KAAKe,IAC9B1C,EAAAA,EAAAA,KAAA,OAAAE,SAAewC,GAALA,QAGZ1C,EAAAA,EAAAA,KAAC6B,EAAW,CAACpE,GAAI2C,EAAM3C,aAGpB,ICtBD,SAASkF,EAAYjD,GAAoB,IAAnB,MAAEU,GAAcV,EAC5C,OACCsB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAQ,cAAY,gBAAef,SAAA,EACjDF,EAAAA,EAAAA,KAACgC,EAAU,CAACC,IAAK7B,EAAMmC,MAAOL,IAAK9B,EAAMoC,QACzCxB,EAAAA,EAAAA,MAAA,OAAAd,SAAA,EACCF,EAAAA,EAAAA,KAAA,MAAAE,SAAKE,EAAMoC,QACXxC,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,qBAAqB,cAAY,cAAaf,SAAEE,EAAMwC,eACrE5B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAmB,cAAY,YAAWf,SAAA,EACvD2C,EAAAA,EAAAA,IAAazC,GAAOuB,KAAKe,IACzB1C,EAAAA,EAAAA,KAAA,OAAAE,SAAewC,GAALA,MAEX1C,EAAAA,EAAAA,KAAC6B,EAAW,CAACpE,GAAI2C,EAAM3C,aAK5B,C,iECxBO,SAASqF,IACf,MAAM,QAAEC,IAAY/E,EAAAA,EAAAA,MAEpB,OACCgC,EAAAA,EAAAA,KAAA,UAAQiB,UAAU,iBAAiBC,QAAS6B,EAAQ7C,SAAC,UAEvD,C,4CCRO,MAAM8C,EAAgBC,KAC1BA,EAAMC,cAAcC,MAAMC,EAAAA,IAEhBC,EAAmBC,GAC/BA,EAAS5B,QAAU,ECOb,SAAS6B,EAAQ7D,GAAsB,IAArB,QAAE8D,GAAgB9D,EAC1C,MAAOuD,EAAOQ,IAAYlF,EAAAA,EAAAA,UAAiB,KACpC+E,EAAUI,IAAenF,EAAAA,EAAAA,UAAiB,KAC1CoF,EAAYC,IAAiBrF,EAAAA,EAAAA,UAAiB,KAC9CsF,EAAeC,IAAoBvF,EAAAA,EAAAA,UAAiB,KACpDwF,EAAWC,IAAgBzF,EAAAA,EAAAA,UAAiB,KAC5C0F,EAAYC,IAAiB3F,EAAAA,EAAAA,UAAiB,KAC9C4F,EAAeC,IAAoB7F,EAAAA,EAAAA,UAAiB,KACpDuB,EAAWuE,IAAgB9F,EAAAA,EAAAA,WAAkB,GAC9CS,GAAWC,EAAAA,EAAAA,MACXqF,GAAOtG,EAAAA,EAAAA,MAEPuG,GAAmB/F,EAAAA,EAAAA,cAAY,KAChCwE,EAAaC,GAChBiB,EAAc,IAEdA,EAAc,8BACf,GACE,CAACjB,IAEEuB,GAAsBhG,EAAAA,EAAAA,cAAY,KACnC6E,EAAgBC,GACnBc,EAAiB,IAEjBA,EAAiB,2CAClB,GACE,CAACd,IAGEmB,GAAoBjG,EAAAA,EAAAA,cAAakG,IACtCjB,EAASiB,EAAEC,OAAOC,OACC,KAAnBF,EAAEC,OAAOC,MAAehB,EAAc,IAAMA,EAAc,QAAQ,GAChE,IAEGiB,GAAuBrG,EAAAA,EAAAA,cAAakG,IACzChB,EAAYgB,EAAEC,OAAOC,OACF,KAAnBF,EAAEC,OAAOC,MAAed,EAAiB,IAAMA,EAAiB,WAAW,GACzE,IAEGgB,GAAetG,EAAAA,EAAAA,cAAYZ,UAChC,IACC8G,EAAEK,iBACFR,IACAC,IACIxB,EAAaC,IAAUI,EAAgBC,KAC1Ce,GAAa,GACTb,SACGc,EAAKU,OAAO/B,EAAOK,GACzBtE,EAASM,EAAAA,UAAU2F,mBAEbX,EAAKY,OAAOjC,EAAOK,GACzBtE,EAASM,EAAAA,UAAU2F,YAGtB,CAAE,MAAOE,GACRd,GAAa,GACTc,aAAiBC,MACpBpB,EAAamB,EAAME,SAEnBrB,EAAa,gBAEf,IACE,CAACM,EAAMrB,EAAOK,EAAUE,EAASe,EAAkBC,EAAqBxF,IAE3E,OACCgC,EAAAA,EAAAA,MAACsE,EAAAA,GAAI,CAACC,SAAUT,EAAc7D,UAAU,YAAYkE,MAAOpB,EAAW,cAAY,YAAW7D,SAAA,EAC5FF,EAAAA,EAAAA,KAACwF,EAAAA,GAAK,CAACC,YAAY,QAAQC,KAAK,QAAQC,MAAOhC,EAC3CiC,SAAUnB,EAAmBhH,GAAG,WAChCoI,OAAQtB,EAAkBY,MAAOlB,KACrCjE,EAAAA,EAAAA,KAACwF,EAAAA,GAAK,CAACC,YAAY,WAAWC,KAAK,WAAWC,MAAO9B,EACjD+B,SAAUf,EAAsBpH,GAAG,WACnCoI,OAAQrB,EAAqBW,MAAOhB,KACxCnE,EAAAA,EAAAA,KAAC8F,EAAAA,GAAM,CAAC7E,UAAS,GAAAkB,OAAKrC,GAAa,WAAa4F,KAAK,SAAQxF,SAC3DJ,EAAY,aAAgB0D,EAAU,UAAY,cAIvD,C,kIC/EO,SAASuC,IACf,MAAM,MAAEC,EAAK,SAAEC,IAAa9H,EAAAA,EAAAA,YAAW+H,EAAAA,GAUvC,MAAO,CAAEF,QAAOG,YARIA,KACnB,MAAMC,EAAWJ,IAAUK,EAAAA,GAAMC,MAAQD,EAAAA,GAAME,KAAOF,EAAAA,GAAMC,OAC5DE,EAAAA,EAAAA,IAAkBR,IAClBS,EAAAA,EAAAA,IAAeL,IACfM,EAAAA,EAAAA,IAAiBN,GACjBH,EAASG,EAAS,EAIpB,C,aCfO,SAASO,IACf,MAAM,MAAEX,EAAK,YAAEG,GAAgBJ,IAE/B,OACC/F,EAAAA,EAAAA,KAAA,UAAQiB,UAAU,eAAeC,QAASiF,EAAYjG,SACpD8F,IAAUK,EAAAA,GAAMC,OAChBtG,EAAAA,EAAAA,KAAC4G,EAAAA,IAAU,CAACvF,KAAM,MAElBrB,EAAAA,EAAAA,KAAC6G,EAAAA,IAAK,CAACxF,KAAM,MAIjB,C,cCdO,SAASyF,IACf,OACC9G,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,eAAcf,UAC5BF,EAAAA,EAAAA,KAACqC,EAAAA,GAAO,CAACd,GAAIjC,EAAAA,UAAU2F,UAAU/E,SAAC,oBAGrC,C,sDCCO,SAAS6G,EAAerH,GAAoB,IAAnB,MAAEa,GAAcb,EAC/C,MAAQE,KAAMoH,EAAkB,GAAE,UAAElH,IAAcmH,EAAAA,EAAAA,IAAwB1G,GAE1E,OACCP,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIJ,IAAgBA,GAAwC,IAA3BkH,EAAgBtF,UAC/C1B,EAAAA,EAAAA,KAAA,MAAIiB,UAAU,mBAAkBf,SAC9BJ,GACAE,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBAEJF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACE8G,EAAgBrF,KAAIe,IACpB1C,EAAAA,EAAAA,KAAA,MAAAE,UACCc,EAAAA,EAAAA,MAACqB,EAAAA,GAAO,CAACd,GAAIjC,EAAAA,UAAUgD,WAAa,IAAMI,EAAGjF,GAAGyC,SAAA,EAC/CF,EAAAA,EAAAA,KAACgC,EAAAA,GAAU,CAACC,IAAKS,EAAGH,MAAOL,IAAKQ,EAAGF,KAAMvB,UAAU,iBACnDjB,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,yBAAwBf,SAAEwC,EAAGF,WAHrCE,EAAGjF,WAapB,CCrBO,SAASyJ,EAAUxH,GAAyB,IAAxB,WAAEyH,GAAmBzH,EAC/C,MAAOa,EAAO6G,IAAY7I,EAAAA,EAAAA,UAAiB4I,IACpCE,EAAQC,IAAa/I,EAAAA,EAAAA,WAAkB,GACxCgJ,GAAiBC,EAAAA,EAAAA,IAAYjH,EAAO,KACpCvB,GAAWC,EAAAA,EAAAA,MAEXwI,GAAejJ,EAAAA,EAAAA,cAAakG,IACjC0C,EAAS1C,EAAEC,OAAOC,MAAM,GACtB,IAEG8C,GAAclJ,EAAAA,EAAAA,cAAY,KAC/B8I,GAAU,EAAK,GACb,IAEGK,GAAanJ,EAAAA,EAAAA,cAAY,KAC9BoJ,YAAW,IAAMN,GAAU,IAAQ,IAAI,GACrC,IAEGxC,GAAetG,EAAAA,EAAAA,cAAYZ,UAChC8G,EAAEK,iBACmB,IAAjBxE,EAAMmB,SACT4F,GAAU,SACJjH,EAAAA,GAAQC,mBAAmBC,GACjCvB,EAASM,EAAAA,UAAUkC,YAAc,UAAYjB,GAC9C,GACE,CAACvB,EAAUuB,IAEd,OACCS,EAAAA,EAAAA,MAAAf,EAAAA,SAAA,CAAAC,SAAA,EACCc,EAAAA,EAAAA,MAACsE,EAAAA,GAAI,CAACC,SAAUT,EAAa5E,SAAA,EAC5BF,EAAAA,EAAAA,KAACwF,EAAAA,GAAK,CAACC,YAAY,uBACfb,MAAOrE,EACPqF,SAAU6B,EACVI,QAASH,EACT7B,OAAQ8B,KAEZ3H,EAAAA,EAAAA,KAAA,UAAQiB,UAAU,oBAAmBf,UACpCF,EAAAA,EAAAA,KAAC8H,EAAAA,IAAQ,CAACzG,KAAM,UAGjBkG,GAAkBF,GAAUE,EAAe7F,QAAU,IACrD1B,EAAAA,EAAAA,KAAC+G,EAAe,CAACxG,MAAOgH,MAI5B,CCxDO,SAASQ,IACf,MAAOC,IAAgBC,EAAAA,EAAAA,MACvB,OACCjI,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,iBAAiB,cAAY,SAAQf,UACnDF,EAAAA,EAAAA,KAACkH,EAAU,CAACC,WAAYa,EAAaE,IAAI,UAAY,IAC7CF,EAAaE,IAAI,UAAY,KAGxC,C,wBCPO,SAASC,IACf,MAAM,WAAEpK,IAAeC,EAAAA,EAAAA,MAEvB,OACCgC,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,cAAaf,UAC3Bc,EAAAA,EAAAA,MAAA,MAAAd,SAAA,CACEnC,IAAeW,EAAAA,GAAWC,WAC1BqC,EAAAA,EAAAA,MAAAf,EAAAA,SAAA,CAAAC,SAAA,CACEkI,EAAAA,GAAezG,KAAIe,IACnB1C,EAAAA,EAAAA,KAAA,MAAAE,UAAkBF,EAAAA,EAAAA,KAACsB,EAAAA,GAAI,CAAC+G,KAAM3F,EAAG2F,KAAMC,KAAM5F,EAAG4F,QAAvC5F,EAAG2F,SAEbrI,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAC8C,EAAAA,EAAM,SAGZ/E,IAAeW,EAAAA,GAAW6J,YAC1BvI,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACEsI,EAAAA,GAAiB7G,KAAIe,IACrB1C,EAAAA,EAAAA,KAAA,MAAAE,UAAkBF,EAAAA,EAAAA,KAACsB,EAAAA,GAAI,CAAC+G,KAAM3F,EAAG2F,KAAMC,KAAM5F,EAAG4F,QAAvC5F,EAAG2F,cAOnB,CCrBO,SAASI,IACf,OACCzI,EAAAA,EAAAA,KAAA,UAAQiB,UAAU,SAAS,cAAY,SAAQf,UAC9CF,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,YAAWf,UACzBc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaf,SAAA,EAC3BF,EAAAA,EAAAA,KAAC8G,EAAI,KACL9G,EAAAA,EAAAA,KAAC+H,EAAM,KACP/H,EAAAA,EAAAA,KAACmI,EAAU,KACXnI,EAAAA,EAAAA,KAAC2G,EAAW,UAKjB,CChBO,SAAS+B,IACf,MAAM,MAAE1C,GAAUD,IAClB,OACC/E,EAAAA,EAAAA,MAAAf,EAAAA,SAAA,CAAAC,SAAA,EACCF,EAAAA,EAAAA,KAACyI,EAAM,KACPzI,EAAAA,EAAAA,KAAA,QAAAE,UACCF,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,YAAWf,UACzBF,EAAAA,EAAAA,KAAC2I,EAAAA,GAAM,QAGR3C,IAAUK,EAAAA,GAAMC,OAChBtG,EAAAA,EAAAA,KAAC4I,EAAAA,GAAO,CAACC,aAAcC,EAAAA,MAEvB9I,EAAAA,EAAAA,KAAC4I,EAAAA,GAAO,CAACC,aAAcE,EAAAA,OAI3B,C","sources":["entities/favorite/favorite.ts","entities/favorite/use-favorites-id.ts","entities/favorite/use-favorite.ts","entities/favorite/ui.tsx","entities/history/history.ts","entities/history/use-history.ts","entities/history/ui/history-row/ui.tsx","entities/history/ui/ui.tsx","features/add-to-favorites/ui.tsx","entities/plant/ui/plant-image/ui.tsx","entities/plant/ui/plant-card/ui.tsx","entities/plant/ui/plant-details/ui.tsx","features/auth/logout/ui.tsx","features/auth/auth/lib.ts","features/auth/auth/ui.tsx","entities/theme/use-theme.ts","features/change-theme/ui.tsx","widgets/header/ui/logo/ui.tsx","features/search/ui/suggestions-list/ui.tsx","features/search/ui/ui.tsx","widgets/header/ui/search/ui.tsx","widgets/header/ui/navigation/ui.tsx","widgets/header/ui/index.tsx","widgets/layouts/base-layout/ui.tsx"],"sourcesContent":["import { firebaseApi } from 'shared/api';\r\n\r\nexport const favorite = {\r\n\tasync addFavorite(id: number): Promise<void> {\r\n\t\tvoid await firebaseApi.addFavorite(id);\r\n\t},\r\n\r\n\tasync removeFavorite(id: number): Promise<void> {\r\n\t\tvoid await firebaseApi.removeFavorite(id);\r\n\t},\r\n\r\n\tasync readFavorites(): Promise<number[]> {\r\n\t\treturn await firebaseApi.readFavorites();\r\n\t}\r\n};","import { useCallback, useContext, useEffect, useState } from 'react';\r\n\r\nimport { FavoritesContext } from 'app/contexts';\r\nimport { useAuth } from 'entities/user';\r\nimport { AuthStatus } from 'shared/config';\r\n\r\nimport { favorite } from './favorite';\r\n\r\ninterface useFavoritesIdResult {\r\n\tfavoritesId: number[];\r\n\tisFavoritesIdLoading: boolean;\r\n}\r\n\r\nexport const useFavoritesId = (): useFavoritesIdResult => {\r\n\tconst { authStatus } = useAuth();\r\n\tconst { favoritesId, setFavoritesId } = useContext(FavoritesContext);\r\n\tconst [isFavoritesIdLoading, setIsFavoritesIdLoading] = useState<boolean>(true);\r\n\r\n\tconst readFavorites = useCallback(async (): Promise<void> => {\r\n\t\tsetIsFavoritesIdLoading(true);\r\n\t\tsetFavoritesId(await favorite.readFavorites());\r\n\t\tsetIsFavoritesIdLoading(false);\r\n\t}, [setFavoritesId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (authStatus === AuthStatus.SignedIn) {\r\n\t\t\tvoid readFavorites();\r\n\t\t} else {\r\n\t\t\tsetFavoritesId([]);\r\n\t\t\tsetIsFavoritesIdLoading(false);\r\n\t\t}\r\n\t}, [authStatus, readFavorites, setFavoritesId]);\r\n\r\n\treturn {\r\n\t\tfavoritesId,\r\n\t\tisFavoritesIdLoading\r\n\t};\r\n};","import { useCallback, useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { FavoritesContext } from 'app/contexts';\r\nimport { useAuth } from 'entities/user';\r\nimport { AuthStatus, RouteName } from 'shared/config';\r\n\r\nimport { favorite } from './favorite';\r\n\r\ninterface useFavoriteResult {\r\n\tisFavorite: boolean;\r\n\tchangeFavorite: () => Promise<void>;\r\n}\r\n\r\nexport const useFavorite = (id: number): useFavoriteResult => {\r\n\tconst { authStatus } = useAuth();\r\n\tconst { favoritesId, setFavoritesId } = useContext(FavoritesContext);\r\n\tconst [isFavorite, setIsFavorite] = useState<boolean>(favoritesId.includes(id));\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst removeFavoriteId = useCallback((id: number): void => {\r\n\t\tsetFavoritesId(favorite => favorite.filter(f => f !== id));\r\n\t}, [setFavoritesId]);\r\n\r\n\tconst changeFavorite = async (): Promise<void> => {\r\n\t\tif (authStatus === AuthStatus.SignedIn) {\r\n\t\t\tif (isFavorite) {\r\n\t\t\t\tvoid await favorite.removeFavorite(id);\r\n\t\t\t\tsetIsFavorite(false);\r\n\t\t\t\tremoveFavoriteId(id);\r\n\t\t\t} else {\r\n\t\t\t\tvoid await favorite.addFavorite(id);\r\n\t\t\t\tsetIsFavorite(true);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnavigate(RouteName.REGISTRATION_PAGE);\r\n\t\t}\r\n\t};\r\n\r\n\treturn {\r\n\t\tisFavorite,\r\n\t\tchangeFavorite\r\n\t};\r\n};","import React, { memo } from 'react';\r\n\r\nimport { PlantCard } from 'entities/plant';\r\nimport { useGetPlantByIdQuery } from 'shared/api';\r\n\r\ninterface Props {\r\n\tfavoriteId: number;\r\n}\r\n\r\nexport const FavoriteCard = memo(({ favoriteId }: Props) => {\r\n\tconst { data: favoritePlant, isLoading } = useGetPlantByIdQuery(favoriteId);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!isLoading && favoritePlant &&\r\n\t\t\t\t<PlantCard plant={favoritePlant} />\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n});","import { firebaseApi } from 'shared/api';\r\nimport { SearchHistory } from 'shared/config';\r\n\r\nexport const history = {\r\n\tasync addSearchedHistory(query: string): Promise<void> {\r\n\t\tvoid await firebaseApi.addSearchedHistory(query);\r\n\t},\r\n\r\n\tasync removeSearchedHistory(id: string): Promise<void> {\r\n\t\tvoid await firebaseApi.removeSearchedHistory(id);\r\n\t},\r\n\r\n\tasync getSearchHistory(): Promise<SearchHistory> {\r\n\t\treturn await firebaseApi.getSearchHistory();\r\n\t}\r\n};","import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { useAuth } from 'entities/user';\r\nimport { AuthStatus, SearchHistory } from 'shared/config';\r\n\r\nimport { history } from './history';\r\n\r\ninterface useHistoryResult {\r\n\tsearchHistory: SearchHistory;\r\n\tsetSearchHistory: React.Dispatch<React.SetStateAction<SearchHistory>>;\r\n\tisHistoryLoading: boolean;\r\n}\r\n\r\nexport const useHistory = (): useHistoryResult => {\r\n\tconst { authStatus } = useAuth();\r\n\tconst [searchHistory, setSearchHistory] = useState<SearchHistory>([]);\r\n\tconst [isHistoryLoading, setIsHistoryLoading] = useState<boolean>(true);\r\n\r\n\tconst getSearchHistory = useCallback(async (): Promise<void> => {\r\n\t\tsetIsHistoryLoading(true);\r\n\t\tsetSearchHistory(await history.getSearchHistory());\r\n\t\tsetIsHistoryLoading(false);\r\n\t}, [setSearchHistory]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (authStatus === AuthStatus.SignedIn) {\r\n\t\t\tvoid getSearchHistory();\r\n\t\t} else {\r\n\t\t\tsetSearchHistory([]);\r\n\t\t\tsetIsHistoryLoading(false);\r\n\t\t}\r\n\t}, [authStatus, getSearchHistory, setSearchHistory]);\r\n\r\n\treturn { searchHistory, setSearchHistory, isHistoryLoading };\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MdOutlineClose } from 'react-icons/md';\r\n\r\nimport { history } from 'entities/history';\r\nimport { RouteName, SearchHistory } from 'shared/config';\r\n\r\nimport './styles.css';\r\n\r\ninterface Props {\r\n\tid: string;\r\n\tquery: string;\r\n\tdata: string;\r\n\tsetSearchHistory: React.Dispatch<React.SetStateAction<SearchHistory>>;\r\n}\r\n\r\nexport function HistoryRow({ id, query, data, setSearchHistory }: Props) {\r\n\r\n\tconst deleteHistoryRow = async (): Promise<void> => {\r\n\t\tawait history.removeSearchedHistory(id);\r\n\t\tsetSearchHistory(history => history.filter(h => h.id !== id));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='history-row'>\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={deleteHistoryRow}>\r\n\t\t\t\t\t<MdOutlineClose size={25} />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Link to={RouteName.SEARCH_PAGE + '?query=' + query}>\r\n\t\t\t\t\t{data}\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Link to={RouteName.SEARCH_PAGE + '?query=' + query}>\r\n\t\t\t\t\t{query}\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}","import React from 'react';\r\n\r\nimport { SearchHistory } from 'shared/config';\r\n\r\nimport { HistoryRow } from './history-row';\r\n\r\nimport './styles.css';\r\n\r\ninterface Props {\r\n\tsearchHistory: SearchHistory;\r\n\tsetSearchHistory: React.Dispatch<React.SetStateAction<SearchHistory>>;\r\n}\r\n\r\nexport function HistoryTable({ searchHistory, setSearchHistory }: Props) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{searchHistory.length !== 0 ?\r\n\t\t\t\t<div className='history-table'>\r\n\t\t\t\t\t<div className='history-table__head-row'>\r\n\t\t\t\t\t\t<div>Delete</div>\r\n\t\t\t\t\t\t<div>Date</div>\r\n\t\t\t\t\t\t<div>Search query</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{searchHistory.map(item => (\r\n\t\t\t\t\t\t<HistoryRow key={item.id} id={item.id} query={item.query} data={item.data}\r\n\t\t\t\t\t\t\t\t\tsetSearchHistory={setSearchHistory} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t:\r\n\t\t\t\t<h2 className='history-not-found'>Nothing found</h2>\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\n","import React, { memo } from 'react';\r\nimport { PiHeartFill, PiHeartLight } from 'react-icons/pi';\r\n\r\nimport { useFavorite } from 'entities/favorite';\r\n\r\nimport './styles.css';\r\n\r\ninterface Props {\r\n\tid: number;\r\n}\r\n\r\nexport const HeartButton = memo(({ id }: Props) => {\r\n\tconst { isFavorite, changeFavorite } = useFavorite(id);\r\n\r\n\treturn (\r\n\t\t<button className='heart' onClick={changeFavorite} data-testid='heart'>\r\n\t\t\t{isFavorite ?\r\n\t\t\t\t<PiHeartFill size={25} data-testid='heart-add' />\r\n\t\t\t\t:\r\n\t\t\t\t<PiHeartLight size={25} data-testid='heart-remove' />\r\n\t\t\t}\r\n\t\t</button>\r\n\t);\r\n});","import { Image } from 'shared/ui';\r\n\r\nimport './styles.css';\r\nimport { memo } from 'react';\r\n\r\ninterface Props {\r\n\tsrc: string;\r\n\talt: string;\r\n\tclassName?: string;\r\n}\r\n\r\nexport const PlantImage = memo(({ src, alt, className }: Props) =>\r\n\t(\r\n\t\t<div className={`plant-img ${className} ${!src && 'plant-filter'}`}>\r\n\t\t\t{src ?\r\n\t\t\t\t<Image src={src} alt={alt} />\r\n\t\t\t\t:\r\n\t\t\t\t<Image className='filter' src='https://perenual.com/storage/image/missing_image.jpg' alt='Missing' />\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n);","import React, { memo } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { HeartButton } from 'features/add-to-favorites';\r\nimport { PlantType, RouteName } from 'shared/config';\r\nimport { getPlantShortInfo } from 'shared/lib';\r\n\r\nimport { PlantImage } from '../plant-image';\r\n\r\nimport './styles.css';\r\n\r\ninterface Props {\r\n\tplant: PlantType;\r\n}\r\n\r\nexport const PlantCard = memo(({ plant }: Props) =>\r\n\t(\r\n\t\t<div className='plant-card' data-testid='plant-card'>\r\n\t\t\t<NavLink to={RouteName.PlANT_PAGE + '/' + plant.id}>\r\n\t\t\t\t<PlantImage src={plant.image} alt={plant.name} />\r\n\t\t\t</NavLink>\r\n\t\t\t<div className='plant-card__div'>\r\n\t\t\t\t<NavLink to={RouteName.PlANT_PAGE + '/' + plant.id}>\r\n\t\t\t\t\t<h3>{plant.name}</h3>\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<div className='plant-card__info'>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{getPlantShortInfo(plant).map((el: string) =>\r\n\t\t\t\t\t\t\t<div key={el}>{el}</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<HeartButton id={plant.id} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n);","import { HeartButton } from 'features/add-to-favorites';\r\nimport { PlantDetailsType } from 'shared/config';\r\nimport { getPlantInfo } from 'shared/lib';\r\n\r\nimport { PlantImage } from '../plant-image';\r\n\r\nimport './styles.css';\r\n\r\ninterface Props {\r\n\tplant: PlantDetailsType;\r\n}\r\n\r\nexport function PlantDetails({ plant }: Props) {\r\n\treturn (\r\n\t\t<div className='plant' data-testid='plant-details'>\r\n\t\t\t<PlantImage src={plant.image} alt={plant.name} />\r\n\t\t\t<div>\r\n\t\t\t\t<h1>{plant.name}</h1>\r\n\t\t\t\t<div className='plant__description' data-testid='description'>{plant.description}</div>\r\n\t\t\t\t<div className='plant__info-card' data-testid='info-card'>\r\n\t\t\t\t\t{getPlantInfo(plant).map((el: string) =>\r\n\t\t\t\t\t\t<div key={el}>{el}</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<HeartButton id={plant.id} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}","import { useAuth } from 'entities/user';\r\n\r\nimport './styles.css';\r\n\r\nexport function Logout() {\r\n\tconst { signOut } = useAuth();\r\n\r\n\treturn (\r\n\t\t<button className='logout__button' onClick={signOut}>Logout</button>\r\n\t);\r\n}","import { emailRegular } from 'shared/config';\r\n\r\nexport const isValidEmail = (email: string): boolean =>\r\n\t!!email.toLowerCase().match(emailRegular);\r\n\r\nexport const isValidPassword = (password: string): boolean =>\r\n\tpassword.length >= 8;","import React, { FormEvent, useCallback, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { useAuth } from 'entities/user';\r\nimport { RouteName } from 'shared/config';\r\nimport { Button, Form, Input } from 'shared/ui';\r\n\r\nimport { isValidEmail, isValidPassword } from './lib';\r\n\r\ninterface Props {\r\n\tisLogin: boolean;\r\n}\r\n\r\nexport function AuthForm({ isLogin }: Props) {\r\n\tconst [email, setEmail] = useState<string>('');\r\n\tconst [password, setPassword] = useState<string>('');\r\n\tconst [emailLabel, setEmailLabel] = useState<string>('');\r\n\tconst [passwordLabel, setPasswordLabel] = useState<string>('');\r\n\tconst [formError, setFormError] = useState<string>('');\r\n\tconst [emailError, setEmailError] = useState<string>('');\r\n\tconst [passwordError, setPasswordError] = useState<string>('');\r\n\tconst [isLoading, setIsLoading] = useState<boolean>(false);\r\n\tconst navigate = useNavigate();\r\n\tconst user = useAuth();\r\n\r\n\tconst handleErrorEmail = useCallback((): void => {\r\n\t\tif (isValidEmail(email)) {\r\n\t\t\tsetEmailError('');\r\n\t\t} else {\r\n\t\t\tsetEmailError('Please enter a valid e-mail');\r\n\t\t}\r\n\t}, [email]);\r\n\r\n\tconst handleErrorPassword = useCallback((): void => {\r\n\t\tif (isValidPassword(password)) {\r\n\t\t\tsetPasswordError('');\r\n\t\t} else {\r\n\t\t\tsetPasswordError('Passwords must have 8 characters or more');\r\n\t\t}\r\n\t}, [password]);\r\n\r\n\r\n\tconst handleChangeEmail = useCallback((e: React.ChangeEvent<HTMLInputElement>): void => {\r\n\t\tsetEmail(e.target.value);\r\n\t\te.target.value === '' ? setEmailLabel('') : setEmailLabel('Email');\r\n\t}, []);\r\n\r\n\tconst handleChangePassword = useCallback((e: React.ChangeEvent<HTMLInputElement>): void => {\r\n\t\tsetPassword(e.target.value);\r\n\t\te.target.value === '' ? setPasswordLabel('') : setPasswordLabel('Password');\r\n\t}, []);\r\n\r\n\tconst handleSubmit = useCallback(async (e: FormEvent<HTMLFormElement>): Promise<void> => {\r\n\t\ttry {\r\n\t\t\te.preventDefault();\r\n\t\t\thandleErrorEmail();\r\n\t\t\thandleErrorPassword();\r\n\t\t\tif (isValidEmail(email) && isValidPassword(password)) {\r\n\t\t\t\tsetIsLoading(true);\r\n\t\t\t\tif (isLogin) {\r\n\t\t\t\t\tawait user.signIn(email, password);\r\n\t\t\t\t\tnavigate(RouteName.MAIN_PAGE);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tawait user.signUp(email, password);\r\n\t\t\t\t\tnavigate(RouteName.MAIN_PAGE);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tif (error instanceof Error) {\r\n\t\t\t\tsetFormError(error.message);\r\n\t\t\t} else {\r\n\t\t\t\tsetFormError('unknown_error');\r\n\t\t\t}\r\n\t\t}\r\n\t}, [user, email, password, isLogin, handleErrorEmail, handleErrorPassword, navigate]);\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={handleSubmit} className='auth-form' error={formError} data-testid='auth-form'>\r\n\t\t\t<Input placeholder='Email' type='email' label={emailLabel}\r\n\t\t\t\t   onChange={handleChangeEmail} id='username'\r\n\t\t\t\t   onBlur={handleErrorEmail} error={emailError} />\r\n\t\t\t<Input placeholder='Password' type='password' label={passwordLabel}\r\n\t\t\t\t   onChange={handleChangePassword} id='password'\r\n\t\t\t\t   onBlur={handleErrorPassword} error={passwordError} />\r\n\t\t\t<Button className={`${isLoading && 'loading'}`} type='submit'>\r\n\t\t\t\t{isLoading ? 'Loading...' : (isLogin ? 'Sign in' : 'Sign up')}\r\n\t\t\t</Button>\r\n\t\t</Form>\r\n\t);\r\n}","import { useContext } from 'react';\r\n\r\nimport { ThemeContext } from 'app/contexts';\r\nimport { Theme } from 'shared/config';\r\nimport { addThemeToHTML, removeThemeToHTML, saveCurrentTheme } from 'shared/lib';\r\n\r\ninterface useThemeResult {\r\n\ttheme: Theme;\r\n\tchangeTheme: () => void;\r\n}\r\n\r\nexport function useTheme(): useThemeResult {\r\n\tconst { theme, setTheme } = useContext(ThemeContext);\r\n\r\n\tconst changeTheme = (): void => {\r\n\t\tconst newTheme = theme === Theme.Light ? Theme.Dark : Theme.Light;\r\n\t\tremoveThemeToHTML(theme);\r\n\t\taddThemeToHTML(newTheme);\r\n\t\tsaveCurrentTheme(newTheme);\r\n\t\tsetTheme(newTheme);\r\n\t};\r\n\r\n\treturn { theme, changeTheme };\r\n}","import { RiMoonLine } from 'react-icons/ri';\r\nimport { GrSun } from 'react-icons/gr';\r\n\r\nimport { useTheme } from 'entities/theme';\r\nimport { Theme } from 'shared/config';\r\n\r\nimport './styles.css';\r\n\r\nexport function ThemeButton() {\r\n\tconst { theme, changeTheme } = useTheme();\r\n\r\n\treturn (\r\n\t\t<button className='theme-button' onClick={changeTheme}>\r\n\t\t\t{theme === Theme.Light ?\r\n\t\t\t\t<RiMoonLine size={25} />\r\n\t\t\t\t:\r\n\t\t\t\t<GrSun size={25} />\r\n\t\t\t}\r\n\t\t</button>\r\n\t);\r\n}","import { NavLink } from 'react-router-dom';\r\n\r\nimport { RouteName } from 'shared/config';\r\n\r\nimport './styles.css';\r\n\r\nexport function Logo() {\r\n\treturn (\r\n\t\t<div className='header__logo'>\r\n\t\t\t<NavLink to={RouteName.MAIN_PAGE}>Plants Gallery</NavLink>\r\n\t\t</div>\r\n\t);\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { PlantImage } from 'entities/plant';\r\nimport { RouteName } from 'shared/config';\r\nimport { useGetPlantsByNameQuery } from 'shared/api';\r\n\r\nimport './styles.css';\r\n\r\ninterface Props {\r\n\tquery: string;\r\n}\r\n\r\nexport function SuggestionsList({ query }: Props) {\r\n\tconst { data: suggestionsList = [], isLoading } = useGetPlantsByNameQuery(query);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{((isLoading) || (!isLoading && suggestionsList.length !== 0)) &&\r\n\t\t\t\t<ul className='suggestions-list'>\r\n\t\t\t\t\t{isLoading ?\r\n\t\t\t\t\t\t<li>Loading...</li>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{suggestionsList.map(el =>\r\n\t\t\t\t\t\t\t\t<li key={el.id}>\r\n\t\t\t\t\t\t\t\t\t<NavLink to={RouteName.PlANT_PAGE + '/' + el.id}>\r\n\t\t\t\t\t\t\t\t\t\t<PlantImage src={el.image} alt={el.name} className='height-50px' />\r\n\t\t\t\t\t\t\t\t\t\t<div className='suggestions-list__text'>{el.name}</div>\r\n\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t</ul>\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n}","import React, { FormEvent, useCallback, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { IoSearch } from 'react-icons/io5';\r\n\r\nimport { history } from 'entities/history';\r\nimport { Form, Input } from 'shared/ui';\r\nimport { RouteName } from 'shared/config';\r\nimport { useDebounce } from 'shared/lib';\r\n\r\nimport { SuggestionsList } from './suggestions-list';\r\n\r\nimport './styles.css';\r\n\r\ninterface Props {\r\n\tqueryParam: string;\r\n}\r\n\r\nexport function SearchForm({ queryParam }: Props) {\r\n\tconst [query, setQuery] = useState<string>(queryParam);\r\n\tconst [isOpen, setIsOpen] = useState<boolean>(false);\r\n\tconst debouncedQuery = useDebounce(query, 500);\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>): void => {\r\n\t\tsetQuery(e.target.value);\r\n\t}, []);\r\n\r\n\tconst handleFocus = useCallback((): void => {\r\n\t\tsetIsOpen(true);\r\n\t}, []);\r\n\r\n\tconst handleBlur = useCallback((): void => {\r\n\t\tsetTimeout(() => setIsOpen(false), 300);\r\n\t}, []);\r\n\r\n\tconst handleSubmit = useCallback(async (e: FormEvent<HTMLFormElement>): Promise<void> => {\r\n\t\te.preventDefault();\r\n\t\tif (query.length !== 0) {\r\n\t\t\tsetIsOpen(false);\r\n\t\t\tawait history.addSearchedHistory(query);\r\n\t\t\tnavigate(RouteName.SEARCH_PAGE + '?query=' + query);\r\n\t\t}\r\n\t}, [navigate, query]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t<Input placeholder='Enter a search query'\r\n\t\t\t\t\t   value={query}\r\n\t\t\t\t\t   onChange={handleChange}\r\n\t\t\t\t\t   onFocus={handleFocus}\r\n\t\t\t\t\t   onBlur={handleBlur}\r\n\t\t\t\t/>\r\n\t\t\t\t<button className='search-form__icon'>\r\n\t\t\t\t\t<IoSearch size={20} />\r\n\t\t\t\t</button>\r\n\t\t\t</Form>\r\n\t\t\t{debouncedQuery && isOpen && debouncedQuery.length >= 2 &&\r\n\t\t\t\t<SuggestionsList query={debouncedQuery} />\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n}","import { useSearchParams } from 'react-router-dom';\r\n\r\nimport { SearchForm } from 'features/search';\r\n\r\nimport './styles.css';\r\n\r\nexport function Search() {\r\n\tconst [searchParams] = useSearchParams();\r\n\treturn (\r\n\t\t<div className='header__search' data-testid='search'>\r\n\t\t\t<SearchForm queryParam={searchParams.get('query') || ''}\r\n\t\t\t\t\t\tkey={searchParams.get('query') || ''} />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { Logout } from 'features/auth';\r\nimport { useAuth } from 'entities/user';\r\nimport { AuthStatus, authNavigation, publicNavigation } from 'shared/config';\r\nimport { Link } from 'shared/ui';\r\n\r\nimport './styles.css';\r\n\r\nexport function Navigation() {\r\n\tconst { authStatus } = useAuth();\r\n\r\n\treturn (\r\n\t\t<nav className='header__nav'>\r\n\t\t\t<ul>\r\n\t\t\t\t{authStatus === AuthStatus.SignedIn &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{authNavigation.map(el =>\r\n\t\t\t\t\t\t\t<li key={el.href}><Link href={el.href} text={el.text} /></li>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<li><Logout /></li>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t\t{authStatus === AuthStatus.SignedOut &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{publicNavigation.map(el =>\r\n\t\t\t\t\t\t\t<li key={el.href}><Link href={el.href} text={el.text} /></li>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n}","import React from 'react';\r\n\r\nimport { ThemeButton } from 'features/change-theme';\r\n\r\nimport { Logo } from './logo';\r\nimport { Search } from './search';\r\nimport { Navigation } from './navigation';\r\n\r\nimport './styles.css';\r\n\r\nexport function Header() {\r\n\treturn (\r\n\t\t<header className='header' data-testid='header'>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<div className='header__row'>\r\n\t\t\t\t\t<Logo />\r\n\t\t\t\t\t<Search />\r\n\t\t\t\t\t<Navigation />\r\n\t\t\t\t\t<ThemeButton />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n}","import { Outlet } from 'react-router-dom';\r\nimport { Toaster } from 'react-hot-toast';\r\n\r\nimport { Header } from 'widgets/header';\r\nimport { useTheme } from 'entities/theme';\r\nimport { Theme, toastOptionsDark, toastOptionsLight } from 'shared/config';\r\n\r\nexport function BaseLayout() {\r\n\tconst { theme } = useTheme();\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header />\r\n\t\t\t<main>\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<Outlet />\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t\t{theme === Theme.Light ?\r\n\t\t\t\t<Toaster toastOptions={toastOptionsLight} />\r\n\t\t\t\t:\r\n\t\t\t\t<Toaster toastOptions={toastOptionsDark} />\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\n"],"names":["favorite","addFavorite","id","firebaseApi","removeFavorite","async","readFavorites","useFavoritesId","authStatus","useAuth","favoritesId","setFavoritesId","useContext","FavoritesContext","isFavoritesIdLoading","setIsFavoritesIdLoading","useState","useCallback","useEffect","AuthStatus","SignedIn","useFavorite","isFavorite","setIsFavorite","includes","navigate","useNavigate","removeFavoriteId","filter","f","changeFavorite","RouteName","REGISTRATION_PAGE","FavoriteCard","memo","_ref","favoriteId","data","favoritePlant","isLoading","useGetPlantByIdQuery","_jsx","_Fragment","children","PlantCard","plant","history","addSearchedHistory","query","removeSearchedHistory","getSearchHistory","useHistory","searchHistory","setSearchHistory","isHistoryLoading","setIsHistoryLoading","HistoryRow","_jsxs","className","onClick","h","MdOutlineClose","size","Link","to","SEARCH_PAGE","HistoryTable","length","map","item","HeartButton","PiHeartFill","PiHeartLight","PlantImage","src","alt","concat","Image","NavLink","PlANT_PAGE","image","name","getPlantShortInfo","el","PlantDetails","description","getPlantInfo","Logout","signOut","isValidEmail","email","toLowerCase","match","emailRegular","isValidPassword","password","AuthForm","isLogin","setEmail","setPassword","emailLabel","setEmailLabel","passwordLabel","setPasswordLabel","formError","setFormError","emailError","setEmailError","passwordError","setPasswordError","setIsLoading","user","handleErrorEmail","handleErrorPassword","handleChangeEmail","e","target","value","handleChangePassword","handleSubmit","preventDefault","signIn","MAIN_PAGE","signUp","error","Error","message","Form","onSubmit","Input","placeholder","type","label","onChange","onBlur","Button","useTheme","theme","setTheme","ThemeContext","changeTheme","newTheme","Theme","Light","Dark","removeThemeToHTML","addThemeToHTML","saveCurrentTheme","ThemeButton","RiMoonLine","GrSun","Logo","SuggestionsList","suggestionsList","useGetPlantsByNameQuery","SearchForm","queryParam","setQuery","isOpen","setIsOpen","debouncedQuery","useDebounce","handleChange","handleFocus","handleBlur","setTimeout","onFocus","IoSearch","Search","searchParams","useSearchParams","get","Navigation","authNavigation","href","text","SignedOut","publicNavigation","Header","BaseLayout","Outlet","Toaster","toastOptions","toastOptionsLight","toastOptionsDark"],"sourceRoot":""}