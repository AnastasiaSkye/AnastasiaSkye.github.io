{"version":3,"file":"static/js/85.16274ea4.chunk.js","mappings":"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","sources":["features/auth/logout/ui.tsx","features/auth/auth/lib.ts","features/auth/auth/ui.tsx","pages/login/ui/index.tsx","widgets/auth-card/ui.tsx"],"sourcesContent":["import { useAuth } from 'entities/user';\r\n\r\nimport './styles.css';\r\n\r\nexport function Logout() {\r\n\tconst { signOut } = useAuth();\r\n\r\n\treturn (\r\n\t\t<button className='logout__button' onClick={signOut}>Logout</button>\r\n\t);\r\n}","import { emailRegular } from 'shared/config';\r\n\r\nexport const isValidEmail = (email: string): boolean =>\r\n\t!!email.toLowerCase().match(emailRegular);\r\n\r\nexport const isValidPassword = (password: string): boolean =>\r\n\tpassword.length >= 8;","import React, { FormEvent, useCallback, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { useAuth } from 'entities/user';\r\nimport { RouteName } from 'shared/config';\r\nimport { Button, Form, Input } from 'shared/ui';\r\n\r\nimport { isValidEmail, isValidPassword } from './lib';\r\n\r\ninterface Props {\r\n\tisLogin: boolean;\r\n}\r\n\r\nexport function AuthForm({ isLogin }: Props) {\r\n\tconst [email, setEmail] = useState<string>('');\r\n\tconst [password, setPassword] = useState<string>('');\r\n\tconst [emailLabel, setEmailLabel] = useState<string>('');\r\n\tconst [passwordLabel, setPasswordLabel] = useState<string>('');\r\n\tconst [formError, setFormError] = useState<string>('');\r\n\tconst [emailError, setEmailError] = useState<string>('');\r\n\tconst [passwordError, setPasswordError] = useState<string>('');\r\n\tconst [isLoading, setIsLoading] = useState<boolean>(false);\r\n\tconst navigate = useNavigate();\r\n\tconst user = useAuth();\r\n\r\n\tconst handleErrorEmail = useCallback((): void => {\r\n\t\tif (isValidEmail(email)) {\r\n\t\t\tsetEmailError('');\r\n\t\t} else {\r\n\t\t\tsetEmailError('Please enter a valid e-mail');\r\n\t\t}\r\n\t}, [email]);\r\n\r\n\tconst handleErrorPassword = useCallback((): void => {\r\n\t\tif (isValidPassword(password)) {\r\n\t\t\tsetPasswordError('');\r\n\t\t} else {\r\n\t\t\tsetPasswordError('Passwords must have 8 characters or more');\r\n\t\t}\r\n\t}, [password]);\r\n\r\n\r\n\tconst handleChangeEmail = useCallback((e: React.ChangeEvent<HTMLInputElement>): void => {\r\n\t\tsetEmail(e.target.value);\r\n\t\te.target.value === '' ? setEmailLabel('') : setEmailLabel('Email');\r\n\t}, []);\r\n\r\n\tconst handleChangePassword = useCallback((e: React.ChangeEvent<HTMLInputElement>): void => {\r\n\t\tsetPassword(e.target.value);\r\n\t\te.target.value === '' ? setPasswordLabel('') : setPasswordLabel('Password');\r\n\t}, []);\r\n\r\n\tconst handleSubmit = useCallback(async (e: FormEvent<HTMLFormElement>): Promise<void> => {\r\n\t\ttry {\r\n\t\t\te.preventDefault();\r\n\t\t\thandleErrorEmail();\r\n\t\t\thandleErrorPassword();\r\n\t\t\tif (isValidEmail(email) && isValidPassword(password)) {\r\n\t\t\t\tsetIsLoading(true);\r\n\t\t\t\tif (isLogin) {\r\n\t\t\t\t\tawait user.signIn(email, password);\r\n\t\t\t\t\tnavigate(RouteName.MAIN_PAGE);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tawait user.signUp(email, password);\r\n\t\t\t\t\tnavigate(RouteName.MAIN_PAGE);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tif (error instanceof Error) {\r\n\t\t\t\tsetFormError(error.message);\r\n\t\t\t} else {\r\n\t\t\t\tsetFormError('unknown_error');\r\n\t\t\t}\r\n\t\t}\r\n\t}, [user, email, password, isLogin, handleErrorEmail, handleErrorPassword, navigate]);\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={handleSubmit} className='auth-form' error={formError} data-testid='auth-form'>\r\n\t\t\t<Input placeholder='Email' type='email' label={emailLabel}\r\n\t\t\t\t   onChange={handleChangeEmail} id='username'\r\n\t\t\t\t   onBlur={handleErrorEmail} error={emailError} />\r\n\t\t\t<Input placeholder='Password' type='password' label={passwordLabel}\r\n\t\t\t\t   onChange={handleChangePassword} id='password'\r\n\t\t\t\t   onBlur={handleErrorPassword} error={passwordError} />\r\n\t\t\t<Button className={`${isLoading && 'loading'}`} type='submit'>\r\n\t\t\t\t{isLoading ? 'Loading...' : (isLogin ? 'Sign in' : 'Sign up')}\r\n\t\t\t</Button>\r\n\t\t</Form>\r\n\t);\r\n}","import React from 'react';\r\n\r\nimport { AuthCard } from 'widgets/auth-card';\r\n\r\nexport function Login() {\r\n\treturn (\r\n\t\t<AuthCard isLogin={true} />\r\n\t);\r\n}","import React from 'react';\r\n\r\nimport { AuthForm } from 'features/auth';\r\nimport { RouteName } from 'shared/config';\r\nimport { Link } from 'shared/ui';\r\n\r\nimport './styles.css';\r\n\r\ninterface Props {\r\n\tisLogin: boolean;\r\n}\r\n\r\nexport function AuthCard({ isLogin }: Props) {\r\n\treturn (\r\n\t\t<div className='auth-card' data-testid='auth-card'>\r\n\t\t\t<h1>{isLogin ? 'Login' : 'Registration'}</h1>\r\n\t\t\t<AuthForm isLogin={isLogin} />\r\n\t\t\t<div className='auth-card__div'>\r\n\t\t\t\t<span>{isLogin ? 'You don\\'t have an account?' : 'Already registered?'}</span>\r\n\t\t\t\t<Link href={isLogin ? RouteName.REGISTRATION_PAGE : RouteName.LOGIN_PAGE}\r\n\t\t\t\t\t  text={isLogin ? 'Sign up' : 'Sign in'} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}"],"names":["Logout","signOut","useAuth","_jsx","className","onClick","children","isValidEmail","email","toLowerCase","match","emailRegular","isValidPassword","password","length","AuthForm","_ref","isLogin","setEmail","useState","setPassword","emailLabel","setEmailLabel","passwordLabel","setPasswordLabel","formError","setFormError","emailError","setEmailError","passwordError","setPasswordError","isLoading","setIsLoading","navigate","useNavigate","user","handleErrorEmail","useCallback","handleErrorPassword","handleChangeEmail","e","target","value","handleChangePassword","handleSubmit","async","preventDefault","signIn","RouteName","MAIN_PAGE","signUp","error","Error","message","_jsxs","Form","onSubmit","Input","placeholder","type","label","onChange","id","onBlur","Button","concat","Login","AuthCard","Link","href","REGISTRATION_PAGE","LOGIN_PAGE","text"],"sourceRoot":""}