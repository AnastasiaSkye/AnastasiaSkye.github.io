{"version":3,"file":"static/js/206.ec925417.chunk.js","mappings":"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","sources":["entities/favorite/favorite.ts","entities/favorite/use-favorites-id.ts","entities/favorite/use-favorite.ts","entities/favorite/ui.tsx","features/add-to-favorites/ui.tsx","entities/plant/ui/plant-image/ui.tsx","entities/plant/ui/plant-card/ui.tsx","entities/plant/ui/plant-details/ui.tsx","pages/plant/ui/index.tsx","../node_modules/react-error-boundary/dist/react-error-boundary.esm.js"],"sourcesContent":["import { firebaseApi } from 'shared/api';\r\n\r\nexport const favorite = {\r\n\tasync addFavorite(id: number): Promise<void> {\r\n\t\tvoid await firebaseApi.addFavorite(id);\r\n\t},\r\n\r\n\tasync removeFavorite(id: number): Promise<void> {\r\n\t\tvoid await firebaseApi.removeFavorite(id);\r\n\t},\r\n\r\n\tasync readFavorites(): Promise<number[]> {\r\n\t\treturn await firebaseApi.readFavorites();\r\n\t}\r\n};","import { useCallback, useContext, useEffect, useState } from 'react';\r\n\r\nimport { FavoritesContext } from 'app/contexts';\r\nimport { useAuth } from 'entities/user';\r\nimport { AuthStatus } from 'shared/config';\r\n\r\nimport { favorite } from './favorite';\r\n\r\ninterface useFavoritesIdResult {\r\n\tfavoritesId: number[];\r\n\tisFavoritesIdLoading: boolean;\r\n}\r\n\r\nexport const useFavoritesId = (): useFavoritesIdResult => {\r\n\tconst { authStatus } = useAuth();\r\n\tconst { favoritesId, setFavoritesId } = useContext(FavoritesContext);\r\n\tconst [isFavoritesIdLoading, setIsFavoritesIdLoading] = useState<boolean>(true);\r\n\r\n\tconst readFavorites = useCallback(async (): Promise<void> => {\r\n\t\tsetIsFavoritesIdLoading(true);\r\n\t\tsetFavoritesId(await favorite.readFavorites());\r\n\t\tsetIsFavoritesIdLoading(false);\r\n\t}, [setFavoritesId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (authStatus === AuthStatus.SignedIn) {\r\n\t\t\tvoid readFavorites();\r\n\t\t} else {\r\n\t\t\tsetFavoritesId([]);\r\n\t\t\tsetIsFavoritesIdLoading(false);\r\n\t\t}\r\n\t}, [authStatus, readFavorites, setFavoritesId]);\r\n\r\n\treturn {\r\n\t\tfavoritesId,\r\n\t\tisFavoritesIdLoading\r\n\t};\r\n};","import { useCallback, useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { FavoritesContext } from 'app/contexts';\r\nimport { useAuth } from 'entities/user';\r\nimport { AuthStatus, RouteName } from 'shared/config';\r\n\r\nimport { favorite } from './favorite';\r\n\r\ninterface useFavoriteResult {\r\n\tisFavorite: boolean;\r\n\tchangeFavorite: () => Promise<void>;\r\n}\r\n\r\nexport const useFavorite = (id: number): useFavoriteResult => {\r\n\tconst { authStatus } = useAuth();\r\n\tconst { favoritesId, setFavoritesId } = useContext(FavoritesContext);\r\n\tconst [isFavorite, setIsFavorite] = useState<boolean>(favoritesId.includes(id));\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst removeFavoriteId = useCallback((id: number): void => {\r\n\t\tsetFavoritesId(favorite => favorite.filter(f => f !== id));\r\n\t}, [setFavoritesId]);\r\n\r\n\tconst changeFavorite = async (): Promise<void> => {\r\n\t\tif (authStatus === AuthStatus.SignedIn) {\r\n\t\t\tif (isFavorite) {\r\n\t\t\t\tvoid await favorite.removeFavorite(id);\r\n\t\t\t\tsetIsFavorite(false);\r\n\t\t\t\tremoveFavoriteId(id);\r\n\t\t\t} else {\r\n\t\t\t\tvoid await favorite.addFavorite(id);\r\n\t\t\t\tsetIsFavorite(true);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnavigate(RouteName.REGISTRATION_PAGE);\r\n\t\t}\r\n\t};\r\n\r\n\treturn {\r\n\t\tisFavorite,\r\n\t\tchangeFavorite\r\n\t};\r\n};","import React, { memo } from 'react';\r\n\r\nimport { PlantCard } from 'entities/plant';\r\nimport { useGetPlantByIdQuery } from 'shared/api';\r\n\r\ninterface Props {\r\n\tfavoriteId: number;\r\n}\r\n\r\nexport const FavoriteCard = memo(({ favoriteId }: Props) => {\r\n\tconst { data: favoritePlant, isLoading } = useGetPlantByIdQuery(favoriteId);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!isLoading && favoritePlant &&\r\n\t\t\t\t<PlantCard plant={favoritePlant} />\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n});","import React, { memo } from 'react';\r\nimport { PiHeartFill, PiHeartLight } from 'react-icons/pi';\r\n\r\nimport { useFavorite } from 'entities/favorite';\r\n\r\nimport './styles.css';\r\n\r\ninterface Props {\r\n\tid: number;\r\n}\r\n\r\nexport const HeartButton = memo(({ id }: Props) => {\r\n\tconst { isFavorite, changeFavorite } = useFavorite(id);\r\n\r\n\treturn (\r\n\t\t<button className='heart' onClick={changeFavorite} data-testid='heart'>\r\n\t\t\t{isFavorite ?\r\n\t\t\t\t<PiHeartFill size={25} data-testid='heart-add' />\r\n\t\t\t\t:\r\n\t\t\t\t<PiHeartLight size={25} data-testid='heart-remove' />\r\n\t\t\t}\r\n\t\t</button>\r\n\t);\r\n});","import { Image } from 'shared/ui';\r\n\r\nimport './styles.css';\r\nimport { memo } from 'react';\r\n\r\ninterface Props {\r\n\tsrc: string;\r\n\talt: string;\r\n\tclassName?: string;\r\n}\r\n\r\nexport const PlantImage = memo(({ src, alt, className }: Props) =>\r\n\t(\r\n\t\t<div className={`plant-img ${className} ${!src && 'plant-filter'}`}>\r\n\t\t\t{src ?\r\n\t\t\t\t<Image src={src} alt={alt} />\r\n\t\t\t\t:\r\n\t\t\t\t<Image className='filter' src='https://perenual.com/storage/image/missing_image.jpg' alt='Missing' />\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n);","import React, { memo } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { HeartButton } from 'features/add-to-favorites';\r\nimport { PlantType, RouteName } from 'shared/config';\r\nimport { getPlantShortInfo } from 'shared/lib';\r\n\r\nimport { PlantImage } from '../plant-image';\r\n\r\nimport './styles.css';\r\n\r\ninterface Props {\r\n\tplant: PlantType;\r\n}\r\n\r\nexport const PlantCard = memo(({ plant }: Props) =>\r\n\t(\r\n\t\t<div className='plant-card' data-testid='plant-card'>\r\n\t\t\t<NavLink to={RouteName.PlANT_PAGE + '/' + plant.id}>\r\n\t\t\t\t<PlantImage src={plant.image} alt={plant.name} />\r\n\t\t\t</NavLink>\r\n\t\t\t<div className='plant-card__div'>\r\n\t\t\t\t<NavLink to={RouteName.PlANT_PAGE + '/' + plant.id}>\r\n\t\t\t\t\t<h3>{plant.name}</h3>\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<div className='plant-card__info'>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{getPlantShortInfo(plant).map((el: string) =>\r\n\t\t\t\t\t\t\t<div key={el}>{el}</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<HeartButton id={plant.id} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n);","import { HeartButton } from 'features/add-to-favorites';\r\nimport { PlantDetailsType } from 'shared/config';\r\nimport { getPlantInfo } from 'shared/lib';\r\n\r\nimport { PlantImage } from '../plant-image';\r\n\r\nimport './styles.css';\r\n\r\ninterface Props {\r\n\tplant: PlantDetailsType;\r\n}\r\n\r\nexport function PlantDetails({ plant }: Props) {\r\n\treturn (\r\n\t\t<div className='plant' data-testid='plant-details'>\r\n\t\t\t<PlantImage src={plant.image} alt={plant.name} />\r\n\t\t\t<div>\r\n\t\t\t\t<h1>{plant.name}</h1>\r\n\t\t\t\t<div className='plant__description' data-testid='description'>{plant.description}</div>\r\n\t\t\t\t<div className='plant__info-card' data-testid='info-card'>\r\n\t\t\t\t\t{getPlantInfo(plant).map((el: string) =>\r\n\t\t\t\t\t\t<div key={el}>{el}</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<HeartButton id={plant.id} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}","import { useParams } from 'react-router-dom';\r\nimport { ErrorBoundary } from 'react-error-boundary';\r\n\r\nimport { PlantDetails } from 'entities/plant';\r\nimport { useFavoritesId } from 'entities/favorite';\r\nimport { useGetPlantsByIdQuery } from 'shared/api';\r\nimport { Fallback, Loader } from 'shared/ui';\r\n\r\nimport './styles.css';\r\n\r\nexport function Plant() {\r\n\tconst { id } = useParams();\r\n\tconst { data: plant, isLoading } = useGetPlantsByIdQuery(Number(id));\r\n\tconst { isFavoritesIdLoading } = useFavoritesId();\r\n\r\n\treturn isLoading || isFavoritesIdLoading ? (\r\n\t\t<Loader />\r\n\t) : (\r\n\t\t<ErrorBoundary FallbackComponent={Fallback}>\r\n\t\t\t{plant ?\r\n\t\t\t\t<PlantDetails plant={plant} />\r\n\t\t\t\t:\r\n\t\t\t\t<h2 className='nothing-found'>Nothing found</h2>\r\n\t\t\t}\r\n\t\t</ErrorBoundary>\r\n\t);\r\n}","'use client';\nimport { createContext, Component, createElement, isValidElement, useContext, useState, useMemo, forwardRef } from 'react';\n\nconst ErrorBoundaryContext = createContext(null);\n\nconst initialState = {\n  didCatch: false,\n  error: null\n};\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.resetErrorBoundary = this.resetErrorBoundary.bind(this);\n    this.state = initialState;\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      didCatch: true,\n      error\n    };\n  }\n  resetErrorBoundary() {\n    const {\n      error\n    } = this.state;\n    if (error !== null) {\n      var _this$props$onReset, _this$props;\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      (_this$props$onReset = (_this$props = this.props).onReset) === null || _this$props$onReset === void 0 ? void 0 : _this$props$onReset.call(_this$props, {\n        args,\n        reason: \"imperative-api\"\n      });\n      this.setState(initialState);\n    }\n  }\n  componentDidCatch(error, info) {\n    var _this$props$onError, _this$props2;\n    (_this$props$onError = (_this$props2 = this.props).onError) === null || _this$props$onError === void 0 ? void 0 : _this$props$onError.call(_this$props2, error, info);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      didCatch\n    } = this.state;\n    const {\n      resetKeys\n    } = this.props;\n\n    // There's an edge case where if the thing that triggered the error happens to *also* be in the resetKeys array,\n    // we'd end up resetting the error boundary immediately.\n    // This would likely trigger a second error to be thrown.\n    // So we make sure that we don't check the resetKeys on the first call of cDU after the error is set.\n\n    if (didCatch && prevState.error !== null && hasArrayChanged(prevProps.resetKeys, resetKeys)) {\n      var _this$props$onReset2, _this$props3;\n      (_this$props$onReset2 = (_this$props3 = this.props).onReset) === null || _this$props$onReset2 === void 0 ? void 0 : _this$props$onReset2.call(_this$props3, {\n        next: resetKeys,\n        prev: prevProps.resetKeys,\n        reason: \"keys\"\n      });\n      this.setState(initialState);\n    }\n  }\n  render() {\n    const {\n      children,\n      fallbackRender,\n      FallbackComponent,\n      fallback\n    } = this.props;\n    const {\n      didCatch,\n      error\n    } = this.state;\n    let childToRender = children;\n    if (didCatch) {\n      const props = {\n        error,\n        resetErrorBoundary: this.resetErrorBoundary\n      };\n      if (typeof fallbackRender === \"function\") {\n        childToRender = fallbackRender(props);\n      } else if (FallbackComponent) {\n        childToRender = createElement(FallbackComponent, props);\n      } else if (fallback === null || isValidElement(fallback)) {\n        childToRender = fallback;\n      } else {\n        throw error;\n      }\n    }\n    return createElement(ErrorBoundaryContext.Provider, {\n      value: {\n        didCatch,\n        error,\n        resetErrorBoundary: this.resetErrorBoundary\n      }\n    }, childToRender);\n  }\n}\nfunction hasArrayChanged() {\n  let a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]));\n}\n\nfunction assertErrorBoundaryContext(value) {\n  if (value == null || typeof value.didCatch !== \"boolean\" || typeof value.resetErrorBoundary !== \"function\") {\n    throw new Error(\"ErrorBoundaryContext not found\");\n  }\n}\n\nfunction useErrorBoundary() {\n  const context = useContext(ErrorBoundaryContext);\n  assertErrorBoundaryContext(context);\n  const [state, setState] = useState({\n    error: null,\n    hasError: false\n  });\n  const memoized = useMemo(() => ({\n    resetBoundary: () => {\n      context.resetErrorBoundary();\n      setState({\n        error: null,\n        hasError: false\n      });\n    },\n    showBoundary: error => setState({\n      error,\n      hasError: true\n    })\n  }), [context.resetErrorBoundary]);\n  if (state.hasError) {\n    throw state.error;\n  }\n  return memoized;\n}\n\nfunction withErrorBoundary(component, errorBoundaryProps) {\n  const Wrapped = forwardRef((props, ref) => createElement(ErrorBoundary, errorBoundaryProps, createElement(component, {\n    ...props,\n    ref\n  })));\n\n  // Format for display in DevTools\n  const name = component.displayName || component.name || \"Unknown\";\n  Wrapped.displayName = \"withErrorBoundary(\".concat(name, \")\");\n  return Wrapped;\n}\n\nexport { ErrorBoundary, ErrorBoundaryContext, useErrorBoundary, withErrorBoundary };\n"],"names":["favorite","addFavorite","id","firebaseApi","removeFavorite","async","readFavorites","useFavoritesId","authStatus","useAuth","favoritesId","setFavoritesId","useContext","FavoritesContext","isFavoritesIdLoading","setIsFavoritesIdLoading","useState","useCallback","useEffect","AuthStatus","SignedIn","useFavorite","isFavorite","setIsFavorite","includes","navigate","useNavigate","removeFavoriteId","filter","f","changeFavorite","RouteName","REGISTRATION_PAGE","FavoriteCard","memo","_ref","favoriteId","data","favoritePlant","isLoading","useGetPlantByIdQuery","_jsx","_Fragment","children","PlantCard","plant","HeartButton","className","onClick","PiHeartFill","size","PiHeartLight","PlantImage","src","alt","concat","Image","_jsxs","NavLink","to","PlANT_PAGE","image","name","getPlantShortInfo","map","el","PlantDetails","description","getPlantInfo","Plant","useParams","useGetPlantsByIdQuery","Number","Loader","ErrorBoundary","FallbackComponent","Fallback","ErrorBoundaryContext","createContext","initialState","didCatch","error","Component","constructor","props","super","this","resetErrorBoundary","bind","state","getDerivedStateFromError","_this$props$onReset","_this$props","_len","arguments","length","args","Array","_key","onReset","call","reason","setState","componentDidCatch","info","_this$props$onError","_this$props2","onError","componentDidUpdate","prevProps","prevState","resetKeys","_this$props$onReset2","_this$props3","a","undefined","b","some","item","index","Object","is","hasArrayChanged","next","prev","render","fallbackRender","fallback","childToRender","createElement","isValidElement","Provider","value"],"sourceRoot":""}